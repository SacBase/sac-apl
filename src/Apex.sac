module Apex;

export { match };

#define BUILT_IN(fun)                                                          \
fun(int)                                                                       \
fun(long)                                                                      \
fun(float)                                                                     \
fun(double)                                                                    \
fun(bool)                                                                      \
fun(char)

inline bool &(bool a, bool b)
{
    return _and_SxS_(a, b);
}

#define MATCH_SxS(typ)                                                         \
inline bool match(typ a, typ b)                                                \
{                                                                              \
    return _eq_SxS_(a, b);                                                     \
}

#define MATCH_SxA(typ)                                                         \
inline bool match(typ a, typ[+] b)                                             \
{                                                                              \
    return false;                                                              \
}

#define MATCH_AxS(typ)                                                         \
inline bool match(typ[+] a, typ b)                                             \
{                                                                              \
    return false;                                                              \
}

#define MATCH_AxA(typ)                                                         \
inline bool match(typ[d1:shp1] a, typ[d2:shp2] b)                              \
{                                                                              \
    return _and_SxS_(_eq_SxS_(d1, d2),                                         \
           _and_SxS_(_all_V_(_eq_VxV_(shp1, shp2)),                            \
                     with {                                                    \
                        (_mul_SxV_(0, shp1) <= iv < shp1)                      \
                            : _eq_SxS_(_sel_VxA_(iv, a), _sel_VxA_(iv, b));    \
                     } : foldfix(&, true, false)                               \
                    ));                                                        \
}

#define MATCH(typ)                                                             \
MATCH_SxS(typ)                                                                 \
MATCH_SxA(typ)                                                                 \
MATCH_AxS(typ)                                                                 \
MATCH_AxA(typ)

BUILT_IN(MATCH)
